namespace EEaseWebAPI.Application.Enums
{
    public enum StatusEnum
    {
        SuccessfullyCreated = 1,
        EmailAlreadyInUse = 2,
        EmailConfirmed = 3,
        EmailNotConfirmed = 4,
        EmailConfirmationFailed = 5,
        InvalidEmailConfirmationCode = 6,
        UserNotFound = 7,
        InvalidCredentials = 8,
        PasswordChangedSuccessfully = 9,
        PasswordChangeFailed = 10,
        InvalidCurrentPassword = 11,
        InvalidResetPasswordCode = 12,
        ResetPasswordCodeExpired = 13,
        ResetPasswordFailed = 14,
        ResetPasswordCodeSentSuccessfully = 15,
        ResetPasswordCodeSendFailed = 16,
        InvalidEmail = 17,
        InvalidUsername = 18,
        InvalidPassword = 19,
        InvalidPhoneNumber = 20,
        UserDeletedSuccessfully = 21,
        UserDeletionFailed = 22,
        UserDeleteCodeSentSuccessfully = 23,
        UserDeleteCodeSendFailed = 24,
        InvalidDeleteCode = 25,
        DeleteCodeExpired = 26,
        UserUpdatedSuccessfully = 27,
        UserUpdateFailed = 28,
        InvalidUserData = 29,
        TokenCreatedSuccessfully = 30,
        TokenCreationFailed = 31,
        TokenRefreshedSuccessfully = 32,
        TokenRefreshFailed = 33,
        InvalidRefreshToken = 34,
        RefreshTokenExpired = 35,
        PreferencesRetrievedSuccessfully = 36,
        PreferencesRetrievalFailed = 37,
        PreferencesUpdatedSuccessfully = 38,
        PreferencesUpdateFailed = 39,
        GeminiAIServiceError = 40,
        GeminiAPIKeyNotFound = 41,
        GeminiAPIKeyLimitExceeded = 42,
        GeminiAPIResponseParseError = 43,
        GeminiInvalidMessage = 44,
        PreferencesResetSuccessfully = 45,
        PreferencesResetFailed = 46,
        UserAlreadyHasPreferences = 47,
        GetAllCountriesFailed = 48,
        GetCitiesBySearchFailed = 49,
        GetCitiesBySearchSuccess = 50,
        InvalidSearchTerm = 51,
        GetAllCountriesSuccess = 52,
        UpdateUserCountrySuccess = 53,
        UpdateUserCountryFailed = 54,
        InvalidCountry = 55,
        FriendRequestSentSuccessfully = 56,
        FriendRequestSendFailed = 57,
        FriendRequestAlreadyExists = 58,
        FriendRequestNotFound = 59,
        FriendRequestAcceptedSuccessfully = 60,
        FriendRequestRejectedSuccessfully = 61,
        FriendRequestResponseFailed = 62,
        FriendRemovedSuccessfully = 63,
        FriendRemovalFailed = 64,
        UserBlockedSuccessfully = 65,
        UserBlockFailed = 66,
        CannotPerformActionOnSelf = 67,
        FriendshipNotFound = 68,
        InvalidFriendshipStatus = 69,
        UserAlreadyBlocked = 70,
        PreferenceDescriptionsRetrievedSuccessfully = 71,
        PreferenceDescriptionsRetrievalFailed = 72,
        GetAllTopicsSuccessfully = 73,
        UserUnblockedSuccessfully = 74,
        UserUnblockedFailed = 75,
        GetBlockedUsersSuccessfully = 76,
        CreateUserFailed = 77,
        GetCurrenciesSuccessfully = 78,
        GetPendingRequestSuccessfully = 79,
        GetUserFriendsSuccessfully = 80,
        GetUserInfoSuccessfully = 81,
        GetUserStatusSuccessfully = 82,
        RouteRequestIsNotValid = 83,
        RouteCreatedSuccessfully = 84,
        RouteComponentPhotoRequestOutOfRange = 85,
        RouteComponentPhotoRetrievedSuccessfully = 86,
        InvalidAge = 87,
        GetAllRoutesRetrievedSuccessfully = 88,
        GetLikedRoutesRetrievedSuccessfully = 89,
        RouteLikeStatusUpdatedSuccessfully = 90,
        RouteDeletedSuccessfully =91,
        UnauthorizedToDeleteRoute=92,
        RouteNotFound = 93,
        RouteRetrievedSuccessfully = 94,
        UnauthorizedToViewRoute = 95,
        InvalidStatusRoute = 96,
        RouteStatusUpdatedSuccessfully = 97,
        InvalidPlaceType = 98,
        PreferenceUpdatedSuccessfully = 99,
        CheckRouteLikeFailed = 100,
        CheckRouteLikeSuccess = 101,
        VerificationCodeSentAgainSuccessfully = 102,
        FriendRequestCancelledSuccessfully = 103,
        FriendRequestCheckedSuccessfully = 104,
        UserCurrencyUpdatedSuccessfully = 105,
        UserCurrencyReceivedSuccessfully = 106,
        TargetIsUser = 107,
        UserPhotoReceivedSuccessfully = 108,
        NotFriends = 109,
        UserBlockedByTarget = 110,
        UserBlockedTarget = 111,
        UserInfoRetrievedSuccessfully = 112,
        UserPhotoChangedSuccessfully = 113,
        SearchUsersSuccessfully = 114,
        SearchUsersFailed = 115,
        ComponentChangedSuccessfully = 116,
        GetRoutesByUserIdRetrievedSuccessfully = 117,

        ServiceUnavailable = 995,
        NetworkError = 996,
        DatabaseError = 997,
        ValidationError = 998,
        UnknownError = 999
    }

    public enum FriendRequestStatus
    {
        NoRequest = 0,
        Requester = 1,  
        Addressee = 2,  
        AlreadyFriends = 3,
        Blocked = 4
    }
    
    public enum ProfileVisibilityStatus
    {
        FullAccess = 0,
        LimitedAccess = 1,
        BlockedByTarget = 2,
        BlockedTarget = 3
    }

    //route status 
    // Status 0 = private to everyone,
    // Status 1 = open to friends,
    // Status 2 = open to everyone.
}